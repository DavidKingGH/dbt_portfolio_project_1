version: 2

models:

- name: mrt__acquisition_device_cohorts
  description: |
    "calculates monthly user acquisition cohorts based on the device of their first session. it tracks monthly revenue, orders, 
    and purchaser counts for each cohort over time."
  config: 
    tags: ['gold', 'behavioral_cohorts', 'devices']
    contract: 
      enforced: true

  data_tests:
    - dbt_utils.unique_combination_of_columns:
        arguments:
          combination_of_columns: 
            - acquisition_device
            - acquisition_month
            - months_since_acquisition
      
    - dbt_utils.expression_is_true:
        name: orders_exceed_purchasers
        arguments:
          expression: "orders >= purchasers"
    
    - dbt_utils.expression_is_true:
        name: revenue_matches_orders
        arguments:
          expression: "(orders = 0 and total_revenue = 0) or (orders > 0 and total_revenue > 0)"
          config:
            severity: warn

    - dbt_utils.expression_is_true:
        name: months_since_acquisition_logical
        arguments: 
          expression: "(months_since_acquisition >= 0) or (months_since_acquisition is null)"

  columns: 
    - name: acquisition_device
      description: "device type of user's first session"
      data_type: varchar
      constraints: 
        - type: not_null
      data_tests: 
        - accepted_values: 
            arguments: 
              values: ['mobile', 'tablet', 'desktop']

    - name: acquisition_month
      description: "month when user first appeared (yyyy-mm-01)"
      data_type: date
      constraints:
        - type: not_null

    - name: months_since_acquisition
      description: "months elapsed since acquisition (0 = same month)"
      data_type: int

    - name: total_revenue
      description: "sum of revenue for this cohort-month combination"
      data_type: decimal
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">= 0"  
    - name: orders
      description: "count of orders for this cohort-month combination"
      data_type: int
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">= 0"  
    - name: purchasers
      description: "count of unique users who purchased in this cohort-month"
      data_type: int
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">= 0"  

- name: mrt__user_device_segments
  description: |
    "segments users based on their dominant purchasing device and assigns them to a spending quartile relative 
    to other users on the same device type."
  config:
    tags: ['gold', 'behavioral_cohorts']
    contract: 
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: revenue_logical
        arguments:
          expression: "total_revenue >= 0"
          config:
            severity: warn

  columns: 
    - name: user_id
      description: 'purchaser id'
      data_type: varchar
      constraints: 
        - type: not_null
        - type: unique
      data_tests:
        - relationships:
            arguments:
              to: ref('dim_users')
              field: user_id
    - name: dominant_device
      description: 'device with most orders; ties broken by revenue, sessions, then alphabetical'
      data_type: varchar
      constraints:
        - type: not_null
      data_tests:
        - accepted_values: 
            arguments: 
              values: ['mobile', 'tablet', 'desktop']
    - name: total_revenue
      description: 'lifetime revenue on dominant device'
      data_type: decimal
      constraints:
        - type: not_null
    - name: spend_quartile
      description: 'spend quartile within dominant_device (1 = top spenders, 4 = low spenders)'
      data_type: int
      constraints:
        - type: not_null
      data_tests:
        - accepted_values: 
            arguments: 
              values: [1,2,3,4]
    - name: total_sessions
      description: 'total sessons across device category' 
      data_type: int
      constraints: 
        - type: not_null

    - name: segment_name
      description: "human-readable label: '<device> - q<quartile> (+ top/low badges)"
      data_type: varchar
      constraints:
        - type: not_null

- name: mrt__campaign_performance_rev_metrics
  description: "channel-level revenue + user metrics; grain = session_source, session_medium. users are counted per-channel."
  config:
    tags: ['gold', 'campaign_performance']
    contract:
        enforced: true
  
  data_tests:
      - dbt_utils.unique_combination_of_columns:
          arguments:
            combination_of_columns: [session_source, session_medium]

      - dbt_utils.expression_is_true:
          name: revenue_nonnegative
          arguments:
            expression: "total_revenue >= 0"
          config:
            severity: warn

      - dbt_utils.expression_is_true:
          name: converting_less_than_total
          arguments:
            expression: "converting_users <= total_users"

      - dbt_utils.expression_is_true:
          name: revenue_matches_conversions
          arguments:
            expression: "(converting_users = 0 and total_revenue = 0) or (converting_users > 0 and total_revenue >= 0)"
          config:
            severity: warn
  columns:
    - name: session_source
      description: "utm source (normalized to lowercase | blanks -> '(not set)')"
      data_type: varchar
      constraints:
        - type: not_null
      data_tests:
        - dbt_utils.not_empty_string
    - name: session_medium
      description: "utm medium (normalized to lowercase | blanks -> '(not set)')"
      data_type: varchar
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.not_empty_string
    - name: total_revenue
      description: "sum of purchase revenue attributed to sessions in this channel"
      data_type: decimal
      constraints: 
        - type: not_null
    - name: total_users
      description: "distinct users with at least one session in this channel; users may appear in multiple channels"
      data_type: int
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: converting_users
      description: "distinct users with >0 revenue in this channel"
      data_type: int
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: average_order_value
      description: "total_revenue / order_count, this is revenue per purchase event"
      data_type: decimal
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
- name: mrt__first_touch_ltv
  description: "computes lifetime value (ltv) by acquisition source based on first-touch attribution over repeat purchases."
  config:
    tags: ['gold', 'campaign_performance']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        arguments:
          combination_of_columns: [session_source, session_medium]

    - dbt_utils.expression_is_true:
        name: avg_ltv_calculation_correct
        arguments:
          expression: "abs(average_ltv_by_channel - (total_purchase_value_from_cohort / nullif(acquired_customers, 0))) < 0.01"
          config:
              severity: warn
    - dbt_utils.expression_is_true:
        name: customers_imply_revenue
        arguments:
          expression: "(acquired_customers > 0 and total_purchase_value_from_cohort >= 0) or (acquired_customers = 0 and total_purchase_value_from_cohort = 0)"
          config:
            severity: warn
  columns:
    - name: session_source
      description: "utm source (normalized to lowercase | blanks -> '(not set)')"
      data_type: varchar
      constraints:
        - type: not_null
      data_tests:
        - dbt_utils.not_empty_string
    - name: session_medium
      description: "utm medium (normalized to lowercase | blanks -> '(not set)')"
      data_type: varchar
      constraints: 
        - type: not_null
      data_tests:
        - dbt_utils.not_empty_string
    - name: acquired_customers
      description: "number of unique users first acquired through the given source/medium during the cohort window."
      data_type: int
      constraints:
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">= 0"
    - name: total_purchase_value_from_cohort
      description: "number of unique users first acquired through the given source/medium during the cohort window."
      data_type: decimal
      constraints:
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: average_ltv_by_channel
      description: "mean lifetime value per acquired customer for each source/medium; calculated as total revenue divided by acquired customers."
      data_type: decimal
      constraints:
        - type: not_null
      data_tests:
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
- name: mrt__conversion_funnel
  description:  "aggregate conversion funnel showing session drop-off at each purchase step"  
  config:
    tags: ['gold', 'conversion_funnel']
    contract:
      enforced: true

  data_tests:
    - dbt_utils.unique_combination_of_columns:
        arguments:
          combination_of_columns: 
            - as_of_date
            - source
            - medium

    - dbt_utils.expression_is_true:
        name: funnel_logic_valid
        arguments:
          expression: |
            sessions_with_view_item >= sessions_with_add_to_cart
            and sessions_with_add_to_cart >= sessions_with_begin_checkout
            and sessions_with_begin_checkout >= sessions_with_add_shipping
            and sessions_with_add_shipping >= sessions_with_add_payment
            and sessions_with_add_payment >= sessions_with_purchase
            and sessions_with_purchase >= 0

    - dbt_utils.expression_is_true:
        name: has_data
        arguments:
          expression: "sessions_with_view_item > 0"
  
  columns:
    - name: as_of_date
      description: "analysis cutoff date (max date in dataset)"
      data_type: date
      constraints:
        - type: not_null
    - name: source
      description: "normalized marketing traffic source (e.g., google, facebook, (direct)) derived from event session metadata."
      data_type: varchar
      constraints:
        - type: not_null
    - name: medium
      description: "normalized marketing traffic medium (e.g., cpc, email, referral, (none)), paired with source for attribution granularity."
      data_type: varchar
      constraints:
        - type: not_null
    - name: sessions_with_view_item
      description: "count of distinct sessions in the lookback window that included at least one view_item event. represents the total population entering the funnel."
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_to_cart
      description: "count of distinct sessions that included both a view_item and add_to_cart event. indicates how many sessions progressed from browsing to product engagement."
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_begin_checkout
      description: "count of distinct sessions that reached the begin_checkout step after adding to cart. measures transition from intent to checkout initiation."
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_shipping
      description: "count of sessions that completed add_shipping_info, showing progression through checkout form completion."
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_payment
      description: "count of sessions that reached add_payment_info. represents users providing payment details or equivalent step before purchase."
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_purchase
      description: "count of sessions that completed a purchase event (while also meeting prior funnel conditions, depending on model rules). serves as the final conversion metric."
      data_type: integer
      constraints:
        - type: not_null

- name: mrt__first_touch_attribution
  description: first-touch attribution per purchase 
  config:
    tags: ['gold', 'marketing_attribution']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: purchase_after_first_touch
        arguments:
          expression: "purchase_timestamp >= touchpoint_timestamp "
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['purchase_id', 'user_id']
    - dbt_utils.expression_is_true:
        name: has_revenue
        arguments:
          expression: "purchase_revenue >= 0"
  columns: 
    - name: purchase_id
      description: primary key
      data_type: varchar
      data_tests:
        - not_null
        - unique
        - relationships:
            arguments: 
              to: ref('int__purchase_touchpoints')
              field: purchase_id
      constraints:
        - type: not_null
        - type: unique

    - name: user_id
      data_type: varchar
      data_tests:
        - not_null
      constraints: 
        - type: not_null
    - name: purchase_revenue
      data_type: float
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: purchase_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_source
      data_type: varchar

    - name: touchpoint_medium
      data_type: varchar

- name: mrt__last_touch_attribution
  description: last-touch attribution per purchase 
  config:
    tags: ['gold', 'marketing_attribution']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: purchase_after_last_touch
        arguments:
          expression: "purchase_timestamp >= touchpoint_timestamp"
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['purchase_id', 'user_id']
    - dbt_utils.expression_is_true:
        name: has_revenue
        arguments:
          expression: "purchase_revenue >= 0"
  columns: 
    - name: purchase_id
      description: primary key
      data_type: varchar
      data_tests:
        - not_null
        - unique
        - relationships:
            arguments: 
              to: ref('int__purchase_touchpoints')
              field: purchase_id
      constraints:
        - type: not_null
        - type: unique

    - name: user_id
      data_type: varchar
      data_tests:
        - not_null
      constraints: 
        - type: not_null
    - name: purchase_revenue
      data_type: float
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: purchase_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_source
      data_type: varchar

    - name: touchpoint_medium
      data_type: varchar
- name: mrt__rfm
  description: "rfm (recency, frequency, monetary) segmentation for customer value analysis based on 365-day window"
  config:
    tags: ['gold', 'rfm_segmentation']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        name: confirm_grain 
        arguments:
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true: 
        name: last_purchase_before_analysis_date
        arguments:
          expression: "max_purchase_date <= as_of_date"
    - dbt_utils.expression_is_true:
        name: valid_rfm_metrics
        arguments: 
          expression: "frequency >= 0 and monetary >= 0 and recency >= 0"
    - dbt_utils.expression_is_true:
        name: recency_matches_calculation
        arguments:
          expression: "recency = date_diff('day', max_purchase_date, as_of_date)"
          config:
            severity: warn

    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= current_date"
          config:
            severity: warn

  columns:
  - name: user_id
    description: "primary key - one row per customer."
    data_type: varchar
    constraints:
      - type: unique
      - type: not_null
  - name: recency
    description: "days since last purchase (lower = more recent)"
    data_type: int
    constraints: 
      - type: not_null

  - name: frequency
    description: "number of purchases in last 365 days"
    data_type: int
    constraints: 
      - type: not_null

  - name: monetary
    description: "total revenue in last 365 days"
    data_type: decimal
    constraints: 
      - type: not_null

  - name: max_purchase_date
    description: "date of customer's most recent purchase (any time period)"
    data_type: date
    constraints:
      - type: not_null
  
  - name: as_of_date
    description: "analysis cutoff date (max date in dataset)"
    data_type: date
    constraints:
      - type: not_null

- name: mrt__rfm_scoring
  description: "rfm (recency, frequency, monetary) segmentation for customer value analysis based on 365-day window"
  config:
    tags: ['gold', 'rfm_segmentation']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        name: confirm_grain 
        arguments:
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true:
        name: all_customers_segmented
        arguments:
          expression: "rfm_segment != 'other'"
          config:
            severity: warn  # warn if some fall into 'other' 
  columns:
  - name: user_id
    description: "primary key - one row per customer."
    data_type: varchar
    constraints:
      - type: not_null
    data_tests: 
      - relationships: 
          arguments: 
            to: ref('mrt__rfm')
            field: user_id
  - name: recency
    description: "days since last purchase (lower = more recent)"
    data_type: int
    constraints: 
      - type: not_null
  - name: frequency
    description: "number of purchases in last 365 days"
    data_type: int
    constraints: 
      - type: not_null
  - name: monetary
    description: "total revenue in last 365 days"
    data_type: decimal
    constraints: 
      - type: not_null
  - name: as_of_date
    description: "snapshot date for scoring"
    data_type: date
    constraints: 
      - type: not_null
  - name: r_score
    description: "recency quintiles (5=most recent, 1=least recent)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "between 1 and 5"
  - name: f_score
    description: "frequency quintiles (5=most frequent, 1=least frequent)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "between 1 and 5"
  - name: m_score
    description: "monetary quintiles (5=most value, 1=least value)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "between 1 and 5"
  - name: rfm_segment
    description: "user categories per rfm performance"
    data_type: varchar
    constraints: 
      - type: not_null
- name: mrt__funnel_steps_last_30d
  description: "30-day rolling window kpis: conversion rates and funnel metrics"
  config:
    tags: ['gold', 'predictive_features', 'kpi_dashboard']
    contract:
      enforced: true
  
  data_tests: 
    - dbt_utils.expression_is_true: 
        name: valid_browse_to_buy_rates
        arguments: 
          expression: |
            (browse_to_buy_overall is null or (browse_to_buy_overall >= 0 and browse_to_buy_overall <= 1))
            and (browse_to_buy_new is null or (browse_to_buy_new >= 0 and browse_to_buy_new <= 1))
            and (browse_to_buy_returning is null or (browse_to_buy_returning >= 0 and browse_to_buy_returning <= 1))
  
    - dbt_utils.expression_is_true: 
        name: high_intent_users_nonnegative
        arguments: 
          expression: "high_intent_users_overall >= 0"


    - dbt_utils.expression_is_true: 
        name: valid_dropoff_rate
        arguments:
          expression: "dropoff_rate_at_shipping is null or (dropoff_rate_at_shipping >= 0 and dropoff_rate_at_shipping <= 1)"
 
    - dbt_utils.expression_is_true:
        name: valid_funnel_rates
        arguments:
          expression: |
            (rate_cart_to_checkout is null or (rate_cart_to_checkout >= 0 and rate_cart_to_checkout <= 1))
            and (rate_checkout_to_shipping is null or (rate_checkout_to_shipping >= 0 and rate_checkout_to_shipping <= 1))
            and (rate_shipping_to_payment is null or (rate_shipping_to_payment >= 0 and rate_shipping_to_payment <= 1))
    
    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= current_date"
          config:
            severity: warn

  columns:
    - name: as_of_date
      description: "end date of 30-day window (max event_date)"
      data_type: date
      constraints:
        - type: not_null

    - name: browse_to_buy_overall
      description: "conversion rate: purchasers / browsers (all users)"
      data_type: double
      # can be null if no browsers in window
    
    - name: browse_to_buy_new
      description: "conversion rate for new users (first seen in 30-day window)"
      data_type: double
      # can be null if no browsers in window
    
    - name: browse_to_buy_returning
      description: "conversion rate for returning users (first seen before window)"
      data_type: double
      # can be null if no browsers in window

    - name: high_intent_users_overall
      description: "count of users who began checkout"
      data_type: integer
      constraints: 
        - type: not_null
    
    - name: rate_cart_to_checkout
      description: "conversion rate: users who started checkout / users who added to cart"
      data_type: double
      # can be null if no browsers in window

    - name: rate_checkout_to_shipping
      description: "conversion rate: users who added shipping / users who started checkout"
      data_type: double
      # can be null if no browsers in window
      
    - name: rate_shipping_to_payment
      description: "conversion rate: users who added payment / users who added shipping"
      data_type: double
      # can be null if no browsers in window

    - name: dropoff_rate_at_shipping
      description: "abandonment rate: users who didn't add payment after adding shipping"
      data_type: double
      # can be null if no browsers in window
- name: mrt__item_interactions_last_30d
  description: 'aggregates user-item interaction metrics over a trailing 30-day period. each record represents a daily snapshot for a single user, summarizing their shopping behavior and intent. this model is designed to create features for predictive models (e.g., purchase propensity) and to power kpi dashboards by tracking the conversion funnel (view-to-cart ratio), potential lost revenue (abandoned cart value), and user browsing patterns (specialist vs. generalist).'
  config:
    tags: ['gold', 'predictive_features', 'kpi_dashboard']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        arguments: 
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true:
        name: valid_cart_to_view_ratio
        arguments: 
          expression: "(cart_to_view_ratio_last_30d is null or cart_to_view_ratio_last_30d >= 0)"
          config:
            severity: warn
    - dbt_utils.expression_is_true:
        name: abandoned_cart_nonnegative
        arguments: 
          expression: "abandoned_cart_value_last_30d >= 0"
    - dbt_utils.expression_is_true:
        name: valid_avg_price_carted_items
        arguments: 
          expression: "avg_price_of_items_carted_last_30d >= 0"
    - dbt_utils.expression_is_true:
        name: views_per_category_last_30d_logical
        arguments:
          expression: "views_per_category_last_30d is null or  views_per_category_last_30d >= 0"
          config:
            severity: warn  

    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= current_date"
          config:
            severity: warn

  columns: 
    - name: as_of_date
      description: "end date of 30-day window (max event_date)"
      data_type: date
      constraints: 
        - type: not_null

    - name: user_id
      description: 'unique identifier for the user. foreign key to the dim_users table, linking these behavioral metrics to a specific user.'      
      data_type: varchar
      constraints:
        - type: not_null
      data_tests: 
        - relationships: 
            arguments: 
              to: ref('dim_users')
              field: user_id
    - name: cart_to_view_ratio_last_30d
      description: "ratio of items carted to items viewed (0-1)"
      data_type: double
      # can be null if no browsers in window
    - name: abandoned_cart_value_last_30d
      description: "total value of items added to cart but not purchased"
      data_type: decimal
      # can be null if no browsers in window

    - name: avg_price_of_items_carted_last_30d
      description: "average price of items added to cart"
      data_type: decimal
      # can be null if no browsers in window
    - name: last_carted_category_last_30d
      description: "most recent product category added to cart"
      data_type: varchar
      # can be null if no browsers in window
    - name: views_per_category_last_30d
      description: "average items viewed per category (>1 = specialist, <1 = browser)"
      data_type: double
      # can be null if no browsers in window
- name: mrt__engagement_intensity_last_30d
  description: 'calculates user engagement and activity intensity over a trailing 30-day window. each record is a daily snapshot summarizing a single user''s session frequency, recency, and overall activity volume. the model provides key features for churn prediction, user segmentation (e.g., power users vs. casual visitors), and engagement tracking on kpi dashboards. it quantifies how recently a user visited and how frequently they interact with the platform.'

  config:
    tags: ['gold', 'kpi_dashboard', 'predictive_features']
    contract: 
      enforced: true

  data_tests:
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['as_of_date', 'user_id']

    - dbt_utils.expression_is_true:
        name: recency_logical
        arguments:
          expression: "days_since_last_session >= 0 or days_since_last_session is null" 
          config:
            severity: warn
      
    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= current_date"
          config:
            severity: warn

    - dbt_utils.expression_is_true:
        name: events_per_session_logical
        arguments:
          expression: |
            user_sessions_last_30d is null 
            or event_count_last_30d is null
            or event_count_last_30d >= user_sessions_last_30d
          config:
            severity: warn
  
  columns:
    - name: as_of_date
      description: "end date of 30-day window"
      data_type: date
      constraints: 
        - type: not_null
    
    - name: user_id
      description: "user identifier"
      data_type: varchar
      constraints:
        - type: not_null
      data_tests: 
        - relationships:
            arguments: 
              to: ref('dim_users')
              field: user_id
    
    - name: days_since_last_session
      description: "days between last session and snapshot date"
      data_type: integer
    
    - name: user_sessions_last_30d
      description: "count of sessions in 30-day window"
      data_type: integer
      constraints:
        - type: not_null
    
    - name: unique_active_days_last_30d
      description: "count of distinct days user engaged with site"
      data_type: int
      constraints: 
        - type: not_null
    
    - name: avg_session_duration_last_30d_secs
      description: "average session duration in seconds"
      data_type: double
      constraints:
        - type: not_null    

    - name: median_inter_session_gap_hours
      description: "median time between sessions (hours)"
      data_type: double  
      # can be null if user has only 1 session
    
    - name: event_count_last_30d
      description: "total events in 30-day window"
      data_type: integer
      constraints:
        - type: not_null

    - name: avg_events_per_session_last_30d
      description: "average events per session"
      data_type: double
      # can be null if user had 0 sessions in last 30d

  
