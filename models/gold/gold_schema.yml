version: 2

models:

- name: mrt__acquisition_device_cohorts
  description: |
    "Calculates monthly user acquisition cohorts based on the device of their first session. It tracks monthly revenue, orders, 
    and purchaser counts for each cohort over time."
  data_tests:
      - dbt_utils.expression_is_true:
          arguments:
            expression: "orders >= purchasers"
  columns: 
    - name: acquisition_device
      data_tests: 
        - accepted_values: 
            arguments: 
              values: ['mobile', 'tablet', 'desktop']
    - name: acquisition_month
      data_tests: 
        - not_null
    - name: months_since_acquisition
      data_tests: 
        - not_null
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">=0"
    - name: total_revenue
      data_tests:
        - not_null 
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">=0"  
    - name: orders
      data_tests:
        - not_null 
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">=0"  
    - name: purchasers
      data_tests:
        - not_null 
        - dbt_utils.expression_is_true:
            arguments: 
              expression: ">=0"  
- name: mrt__user_device_segments
  description: |
    "Segments users based on their dominant purchasing device and assigns them to a spending quartile relative 
    to other users on the same device type."
  config:
    tags: ['gold', 'behavioral_cohorts']
    contract: 
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: revenue_logical
        arguments:
          expression: "total_reveue >= 0"
          config:
            severity: warn
    - mrt__user_device_segments_logical:
        arguments:
          config: 
            severity: error 

  columns: 
    - name: user_id
      description: 'purchaser id'
      data_type: varchar
      constraints: 
        - type: not_null
        - type: unique
      data_tests:
        - relationships:
            arguments:
              to: ref('dim_users')
              field: user_id
    - name: dominant_device
      description: 'device with most orders; ties broken by revenue, sessions, then alphabetical'
      data_type: varchar
      constraints:
        - type: not_null
      data_tests:
        - accepted_values: 
            arguments: 
              values: ['mobile', 'tablet', 'desktop']
    - name: total_revenue
      description: 'lifetime revenue on dominant device'
      data_type: decimal
      constraints:
        - type: not_null
    - name: spend_quartile
      description: 'spend quartile within dominant_device (1 = top spenders, 4 = low spenders)'
      data_type: int
      constraints:
        - type: not_null
      data_tests:
        - accepted_values: 
            arguments: 
              values: [1,2,3,4]
    - name: total_sessions
      description: 'total sessons across device category' 
      data_type: int
      constraints: 
        - type: not_null

    - name: segment_name
      description: "human-readable label: '<device> - Q<quartile> (+ top/low badges)"
      data_type: varchar
      constraints:
        - type: not_null

- name: mrt__campaign_performance_rev_metrics
  description: |
    "Segments users based on their dominant purchasing device and assigns them to a spending quartile relative 
    to other users on the same device type."
  data_tests:
    - dbt_utils.expression_is_true:
        name: revenue_matches_conversions
        arguments:
          expression: "(converting_users = 0 AND total_revenue = 0) OR (converting_users > 0 AND total_revenue >0)"
          config:
              severity: warn
  columns:
    - name: session_source
      data_tests:
        - not_null
        - dbt_utils.not_empty_string
    - name: session_medium
      data_tests:
        - not_null
        - dbt_utils.not_empty_string
    - name: total_revenue
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: total_users
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: converting_users
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
        - dbt_utils.expression_is_true:
            arguments:
              expression: "<= total_users"
    - name: average_order_value
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
- name: mrt__first_touch_ltv
  description: "..."
  data_tests:
    - dbt_utils.expression_is_true:
        name: avg_ltv_calculation_correct
        arguments:
          expression: "ABS(average_ltv_by_channel - (total_purchase_value_from_cohort / NULLIF(acquired_customers, 0))) < 0.01"
          config:
              severity: warn
    - dbt_utils.expression_is_true:
        name: customers_imply_revenue
        arguments:
          expression: "(acquired_customers > 0 AND total_purchase_value_from_cohort > 0) OR (acquired_customers = 0 AND total_purchase_value_from_cohort = 0)"
          config:
            severity: warn
  columns:
    - name: session_source
      data_tests:
        - not_null
        - dbt_utils.not_empty_string
    - name: session_medium
      data_tests:
        - not_null
        - dbt_utils.not_empty_string
    - name: acquired_customers
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: "> 0"
    - name: total_purchase_value_from_cohort
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
    - name: average_ltv_by_channel
      data_tests:
        - not_null
        - dbt_utils.expression_is_true:
            arguments:
              expression: ">=0"
- name: mrt__conversion_funnel
  description:  Aggregate conversion funnel showing session drop-off at each purchase step
  
  config:
    contract:
      enforced: true
  
  data_tests:
    - dbt_utils.expression_is_true:
        name: funnel_logic_valid
        arguments:
          expression: |
            sessions_with_view_item >= sessions_with_add_to_cart
            AND sessions_with_add_to_cart >= sessions_with_begin_checkout
            AND sessions_with_begin_checkout >= sessions_with_add_shipping
            AND sessions_with_add_shipping >= sessions_with_add_payment
            AND sessions_with_add_payment >= sessions_with_purchase
            AND sessions_with_purchase >= 0
    - dbt_utils.expression_is_true:
        name: has_data
        arguments:
          expression: "sessions_with_view_item > 0"
  
  columns:
    - name: sessions_with_view_item
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_to_cart
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_begin_checkout
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_shipping
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_add_payment
      data_type: integer
      constraints:
        - type: not_null
    - name: sessions_with_purchase
      data_type: integer
      constraints:
        - type: not_null
- name: mrt__first_touch_attribution
  description: first-touch attribution per purchase 
  config:
    tags: ['gold', 'marketing_attribution']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: purchase_after_first_touch
        arguments:
          expression: "purchase_timestamp >= touchpoint_timestamp "
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['purchase_id', 'user_id']
    - dbt_utils.expression_is_true:
        name: has_revenue
        arguments:
          expression: "purchase_revenue >= 0"
  columns: 
    - name: purchase_id
      description: primary key
      data_type: varchar
      data_tests:
        - not_null
        - unique
        - relationships:
            arguments: 
              to: ref('int__purchase_touchpoints')
              field: purchase_id
      constraints:
        - type: not_null
        - type: unique

    - name: user_id
      data_type: varchar
      data_tests:
        - not_null
      constraints: 
        - type: not_null
    - name: purchase_revenue
      data_type: float
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: purchase_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_source
      data_type: varchar

    - name: touchpoint_medium
      data_type: varchar

    
- name: mrt__last_touch_attribution
  description: last-touch attribution per purchase 
  config:
    tags: ['gold', 'marketing_attribution']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.expression_is_true:
        name: purchase_after_last_touch
        arguments:
          expression: "purchase_timestamp >= touchpoint_timestamp "
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['purchase_id', 'user_id']
    - dbt_utils.expression_is_true:
        name: has_revenue
        arguments:
          expression: "purchase_revenue >= 0"
  columns: 
    - name: purchase_id
      description: primary key
      data_type: varchar
      data_tests:
        - not_null
        - unique
        - relationships:
            arguments: 
              to: ref('int__purchase_touchpoints')
              field: purchase_id
      constraints:
        - type: not_null
        - type: unique

    - name: user_id
      data_type: varchar
      data_tests:
        - not_null
      constraints: 
        - type: not_null
    - name: purchase_revenue
      data_type: float
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: purchase_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_timestamp
      data_type: timestamp
      data_tests:
        - not_null
      constraints:
        - type: not_null
    - name: touchpoint_source
      data_type: varchar

    - name: touchpoint_medium
      data_type: varchar
- name: mrt__rfm
  description: "RFM (Recency, Frequency, Monetary) segmentation for customer value analysis based on 365-day window"
  config:
    tags: ['gold', 'rfm_segmentation']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        name: confirm_grain 
        arguments:
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true: 
        name: last_purchase_before_analysis_date
        arguments:
          expression: "max_purchase_date <= as_of_date"
    - dbt_utils.expression_is_true:
        name: valid_rfm_metrics
        arguments: 
          expression: "frequency >= 0 AND monetary >= 0 AND recency >= 0"
    - dbt_utils.expression_is_true:
        name: recency_matches_calculation
        arguments:
          expression: "recency = date_diff('day', max_purchase_date, as_of_date)"
          config:
            severity: warn

    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= CURRENT_DATE"
          config:
            severity: warn

  columns:
  - name: user_id
    description: "Primary key - one row per customer."
    data_type: varchar
    constraints:
      - type: unique
      - type: not_null
  - name: recency
    description: "Days since last purchase (lower = more recent)"
    data_type: int
    constraints: 
      - type: not_null

  - name: frequency
    description: "Number of purchases in last 365 days"
    data_type: int
    constraints: 
      - type: not_null

  - name: monetary
    description: "Total revenue in last 365 days"
    data_type: decimal
    constraints: 
      - type: not_null

  - name: max_purchase_date
    description: "Date of customer's most recent purchase (any time period)"
    data_type: date
    constraints:
      - type: not_null
  
  - name: as_of_date
    description: "Analysis cutoff date (max date in dataset)"
    data_type: date
    constraints:
      - type: not_null

- name: mrt__rfm_scoring
  description: "RFM (Recency, Frequency, Monetary) segmentation for customer value analysis based on 365-day window"
  config:
    tags: ['gold', 'rfm_segmentation']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        name: confirm_grain 
        arguments:
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true:
        name: all_customers_segmented
        arguments:
          expression: "rfm_segment != 'other'"
          config:
            severity: warn  # Warn if some fall into 'other' 
  columns:
  - name: user_id
    description: "Primary key - one row per customer."
    data_type: varchar
    constraints:
      - type: not_null
    data_tests: 
      - relationships: 
          arguments: 
            to: ref('mrt__rfm')
            field: user_id
  - name: recency
    description: "Days since last purchase (lower = more recent)"
    data_type: int
    constraints: 
      - type: not_null
  - name: frequency
    description: "Number of purchases in last 365 days"
    data_type: int
    constraints: 
      - type: not_null
  - name: monetary
    description: "Total revenue in last 365 days"
    data_type: decimal
    constraints: 
      - type: not_null
  - name: as_of_date
    description: "Snapshot date for scoring"
    data_type: date
    constraints: 
      - type: not_null
  - name: r_score
    description: "Recency quintiles (5=most recent, 1=least recent)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "BETWEEN 1 AND 5"
  - name: f_score
    description: "Frequency quintiles (5=most frequent, 1=least frequent)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "BETWEEN 1 AND 5"
  - name: m_score
    description: "Monetary quintiles (5=most value, 1=least value)"
    data_type: int
    constraints:
      - type: not_null
    data_tests:
      - dbt_utils.expression_is_true: 
          arguments:
            expression: "BETWEEN 1 AND 5"
  - name: rfm_segment
    description: "User categories per rfm performance"
    data_type: varchar
    constraints: 
      - type: not_null
- name: mrt__funnel_steps_last_30d
  description: "30-day rolling window KPIs: conversion rates and funnel metrics"
  config:
    tags: ['gold', 'predictive_features', 'kpi_dashboard']
    contract:
      enforced: true
  
  data_tests: 
    - dbt_utils.expression_is_true: 
        name: valid_browse_to_buy_rates
        arguments: 
          expression: |
            (browse_to_buy_overall IS NULL OR (browse_to_buy_overall >= 0 AND browse_to_buy_overall <= 1))
            AND (browse_to_buy_new IS NULL OR (browse_to_buy_new >= 0 AND browse_to_buy_new <= 1))
            AND (browse_to_buy_returning IS NULL OR (browse_to_buy_returning >= 0 AND browse_to_buy_returning <= 1))
  
    - dbt_utils.expression_is_true: 
        name: high_intent_users_nonnegative
        arguments: 
          expression: "high_intent_users_overall >= 0"


    - dbt_utils.expression_is_true: 
        name: valid_dropoff_rate
        arguments:
          expression: "dropoff_rate_at_shipping IS NULL OR (dropoff_rate_at_shipping >= 0 AND dropoff_rate_at_shipping <= 1)"
 
    - dbt_utils.expression_is_true:
        name: valid_funnel_rates
        arguments:
          expression: |
            (rate_cart_to_checkout IS NULL OR (rate_cart_to_checkout >= 0 AND rate_cart_to_checkout <= 1))
            AND (rate_checkout_to_shipping IS NULL OR (rate_checkout_to_shipping >= 0 AND rate_checkout_to_shipping <= 1))
            AND (rate_shipping_to_payment IS NULL OR (rate_shipping_to_payment >= 0 AND rate_shipping_to_payment <= 1))
    
    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= CURRENT_DATE"
          config:
            severity: warn

  columns:
    - name: as_of_date
      description: "End date of 30-day window (max event_date)"
      data_type: date
      constraints:
        - type: not_null

    - name: browse_to_buy_overall
      description: "Conversion rate: purchasers / browsers (all users)"
      data_type: double
      # CAN BE NULL if no browsers in window
    
    - name: browse_to_buy_new
      description: "Conversion rate for new users (first seen in 30-day window)"
      data_type: double
      # CAN BE NULL if no browsers in window
    
    - name: browse_to_buy_returning
      description: "Conversion rate for returning users (first seen before window)"
      data_type: double
      # CAN BE NULL if no browsers in window

    - name: high_intent_users_overall
      description: "Count of users who began checkout"
      data_type: integer
      constraints: 
        - type: not_null
    
    - name: rate_cart_to_checkout
      description: "Conversion rate: users who started checkout / users who added to cart"
      data_type: double
      # CAN BE NULL if no browsers in window

    - name: rate_checkout_to_shipping
      description: "Conversion rate: users who added shipping / users who started checkout"
      data_type: double
      # CAN BE NULL if no browsers in window
      
    - name: rate_shipping_to_payment
      description: "Conversion rate: users who added payment / users who added shipping"
      data_type: double
      # CAN BE NULL if no browsers in window

    - name: dropoff_rate_at_shipping
      description: "Abandonment rate: users who didn't add payment after adding shipping"
      data_type: double
      # CAN BE NULL if no browsers in window
- name: mrt__item_interactions_last_30d
  description: '...'
  config:
    tags: ['gold', 'predictive_features', 'kpi_dashboard']
    contract:
      enforced: true
  data_tests:
    - dbt_utils.unique_combination_of_columns:
        arguments: 
          combination_of_columns: ['user_id','as_of_date']
    - dbt_utils.expression_is_true:
        name: valid_cart_to_view_ratio
        arguments: 
          expression: "(cart_to_view_ratio_last_30d is null or cart_to_view_ratio_last_30d >= 0)"
          config:
            severity: warn
    - dbt_utils.expression_is_true:
        name: abandoned_cart_nonnegative
        arguments: 
          expression: "abandoned_cart_value_last_30d >= 0"
    - dbt_utils.expression_is_true:
        name: valid_avg_price_carted_items
        arguments: 
          expression: "avg_price_of_items_carted_last_30d >= 0"
    - dbt_utils.expression_is_true:
        name: views_per_category_last_30d_logical
        arguments:
          expression: "views_per_category_last_30d is null or  views_per_category_last_30d >= 0"
          config:
            severity: warn  

    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= CURRENT_DATE"
          config:
            severity: warn

  columns: 
    - name: as_of_date
      description: "End date of 30-day window (max event_date)"
      data_type: date
      constraints: 
        - type: not_null

    - name: user_id
      description: '...'
      data_type: varchar
      constraints:
        - type: not_null
      data_tests: 
        - relationships: 
            arguments: 
              to: ref('dim_users')
              field: user_id
    - name: cart_to_view_ratio_last_30d
      description: "Ratio of items carted to items viewed (0-1)"
      data_type: double
      # CAN BE NULL if no browsers in window
    - name: abandoned_cart_value_last_30d
      description: "Total value of items added to cart but not purchased"
      data_type: decimal
      # CAN BE NULL if no browsers in window

    - name: avg_price_of_items_carted_last_30d
      description: "Average price of items added to cart"
      data_type: decimal
      # CAN BE NULL if no browsers in window
    - name: last_carted_category_last_30d
      description: "Most recent product category added to cart"
      data_type: varchar
      # CAN BE NULL if no browsers in window
    - name: views_per_category_last_30d
      description: "Average items viewed per category (>1 = specialist, <1 = browser)"
      data_type: double
      # CAN BE NULL if no browsers in window
- name: mrt__engagement_intensity_last_30d
  description: '...'
  config:
    tags: ['gold', 'kpi_dashboard', 'predictive_features']
    contract: 
      enforced: true

  data_tests:
    - dbt_utils.unique_combination_of_columns: 
        name: confirm_grain
        arguments: 
          combination_of_columns: ['as_of_date', 'user_id']

    - dbt_utils.expression_is_true:
        name: recency_logical
        arguments:
          expression: "days_since_last_session >= 0 OR days_since_last_session IS NULL" 
          config:
            severity: warn
      
    - dbt_utils.expression_is_true:
        name: snapshot_date_reasonable
        arguments:
          expression: "as_of_date <= CURRENT_DATE"
          config:
            severity: warn

    - dbt_utils.expression_is_true:
        name: events_per_session_logical
        arguments:
          expression: |
            user_sessions_last_30d IS NULL 
            OR event_count_last_30d IS NULL
            OR event_count_last_30d >= user_sessions_last_30d
          config:
            severity: warn
  
  columns:
    - name: as_of_date
      description: "End date of 30-day window"
      data_type: date
      constraints: 
        - type: not_null
    
    - name: user_id
      description: "User identifier"
      data_type: varchar
      constraints:
        - type: not_null
      data_tests: 
        - relationships:
            arguments: 
              to: ref('dim_users')
              field: user_id
    
    - name: days_since_last_session
      description: "Days between last session and snapshot date"
      data_type: integer
    
    - name: user_sessions_last_30d
      description: "Count of sessions in 30-day window"
      data_type: integer
      constraints:
        - type: not_null
    
    - name: avg_session_duration_last_30d_secs
      description: "Average session duration in seconds"
      data_type: double
      constraints:
        - type: not_null    

    - name: median_inter_session_gap_hours
      description: "Median time between sessions (hours)"
      data_type: double  
      # Can be NULL if user has only 1 session
    
    - name: event_count_last_30d
      description: "Total events in 30-day window"
      data_type: integer
      constraints:
        - type: not_null

    - name: avg_events_per_session_last_30d
      description: "Average events per session"
      data_type: double
      # Can be NULL if user had 0 sessions in last 30d

  
